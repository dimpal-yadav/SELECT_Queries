name: "Auto Create & Assign Labels"

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up labels
        uses: octokit/request-action@v2
        id: create-labels
        with:
          route: POST /repos/${{ github.repository }}/labels
          mediaType: '{"previews":["symmetra"]}'

      - name: Create labels if missing and assign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Define labels and colors
          declare -A labels
          labels["Level 1 / Beginner"]="#7AE7FF"
          labels["Level 2 / Intermediate"]="#FFAB70"
          labels["Level 3 / Advanced"]="#FF7F7F"
          labels["GSSoC 25"]="#6F42C1"

          # Create labels if they don't exist
          for label in "${!labels[@]}"; do
            response=$(curl -s -o /dev/null -w "%{http_code}" \
              -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${GITHUB_REPOSITORY}/labels \
              -d "{\"name\":\"$label\",\"color\":\"${labels[$label]}\"}")
            if [[ "$response" == "422" ]]; then
              echo "Label '$label' already exists, skipping."
            else
              echo "Label '$label' created."
            fi
          done

          # Get title and body
          TITLE="${{ github.event.issue.title || github.event.pull_request.title }}"
          BODY="${{ github.event.issue.body || github.event.pull_request.body }}"
          TEXT="$TITLE $BODY"

          # Improved logic for level detection using keyword weights
          LEVEL_SCORE=0

          # Level 1 keywords
          if echo "$TEXT" | grep -iqE "typo|doc|documentation|readme|ui"; then
            LEVEL_SCORE=$((LEVEL_SCORE + 1))
          fi

          # Level 2 keywords
          if echo "$TEXT" | grep -iqE "feature|bug|small|update|fix"; then
            LEVEL_SCORE=$((LEVEL_SCORE + 2))
          fi

          # Level 3 keywords
          if echo "$TEXT" | grep -iqE "major|refactor|performance|optimization|critical"; then
            LEVEL_SCORE=$((LEVEL_SCORE + 3))
          fi

          # Determine final label based on score
          if [ $LEVEL_SCORE -le 2 ]; then
            LEVEL_LABEL="Level 1 / Beginner"
          elif [ $LEVEL_SCORE -le 4 ]; then
            LEVEL_LABEL="Level 2 / Intermediate"
          else
            LEVEL_LABEL="Level 3 / Advanced"
          fi

          # Assign labels to issue or PR
          ISSUE_NUMBER="${{ github.event.issue.number || github.event.pull_request.number }}"
          curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/$ISSUE_NUMBER/labels \
            -d "{\"labels\":[\"GSSoC 25\",\"$LEVEL_LABEL\"]}"

          echo "Labels assigned: GSSoC 25, $LEVEL_LABEL"
